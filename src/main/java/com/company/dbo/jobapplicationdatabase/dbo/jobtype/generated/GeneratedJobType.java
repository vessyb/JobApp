package com.company.dbo.jobapplicationdatabase.dbo.jobtype.generated;

import com.company.dbo.jobapplicationdatabase.dbo.jobtype.JobType;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.field.DatastoreFields;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.company.dbo.jobapplicationdatabase.dbo.jobtype.JobType}-interface
 * representing entities of the {@code JobType}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedJobType {
    
    /**
     * This Field corresponds to the {@link JobType} field that can be obtained
     * using the {@link JobType#getId()} method.
     */
    IntField<JobType, Integer> ID = DatastoreFields.createIntField(
        Identifier.ID,
        JobType::getId,
        JobType::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link JobType} field that can be obtained
     * using the {@link JobType#getJobType()} method.
     */
    StringField<JobType, String> JOB_TYPE = DatastoreFields.createStringField(
        Identifier.JOB_TYPE,
        JobType::getJobType,
        JobType::setJobType,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this JobType. The id field corresponds to the database
     * column JobApplicationDatabase.dbo.JobType.id.
     * 
     * @return the id of this JobType
     */
    int getId();
    
    /**
     * Returns the jobType of this JobType. The jobType field corresponds to the
     * database column JobApplicationDatabase.dbo.JobType.jobType.
     * 
     * @return the jobType of this JobType
     */
    String getJobType();
    
    /**
     * Sets the id of this JobType. The id field corresponds to the database
     * column JobApplicationDatabase.dbo.JobType.id.
     * 
     * @param id to set of this JobType
     * @return   this JobType instance
     */
    JobType setId(int id);
    
    /**
     * Sets the jobType of this JobType. The jobType field corresponds to the
     * database column JobApplicationDatabase.dbo.JobType.jobType.
     * 
     * @param jobType to set of this JobType
     * @return        this JobType instance
     */
    JobType setJobType(String jobType);
    
    enum Identifier implements ColumnIdentifier<JobType> {
        
        ID       ("id"),
        JOB_TYPE ("jobType");
        
        private final String columnId;
        private final TableIdentifier<JobType> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "JobApplicationDatabase";
        }
        
        @Override
        public String getSchemaId() {
            return "dbo";
        }
        
        @Override
        public String getTableId() {
            return "JobType";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<JobType> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}
package com.company.dbo.jobapplicationdatabase.dbo.usertype.generated;

import com.company.dbo.jobapplicationdatabase.dbo.usertype.UserType;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.field.DatastoreFields;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.company.dbo.jobapplicationdatabase.dbo.usertype.UserType}-interface
 * representing entities of the {@code UserType}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedUserType {
    
    /**
     * This Field corresponds to the {@link UserType} field that can be obtained
     * using the {@link UserType#getId()} method.
     */
    IntField<UserType, Integer> ID = DatastoreFields.createIntField(
        Identifier.ID,
        UserType::getId,
        UserType::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link UserType} field that can be obtained
     * using the {@link UserType#getType()} method.
     */
    StringField<UserType, String> TYPE = DatastoreFields.createStringField(
        Identifier.TYPE,
        UserType::getType,
        UserType::setType,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this UserType. The id field corresponds to the database
     * column JobApplicationDatabase.dbo.UserType.id.
     * 
     * @return the id of this UserType
     */
    int getId();
    
    /**
     * Returns the type of this UserType. The type field corresponds to the
     * database column JobApplicationDatabase.dbo.UserType.type.
     * 
     * @return the type of this UserType
     */
    String getType();
    
    /**
     * Sets the id of this UserType. The id field corresponds to the database
     * column JobApplicationDatabase.dbo.UserType.id.
     * 
     * @param id to set of this UserType
     * @return   this UserType instance
     */
    UserType setId(int id);
    
    /**
     * Sets the type of this UserType. The type field corresponds to the
     * database column JobApplicationDatabase.dbo.UserType.type.
     * 
     * @param type to set of this UserType
     * @return     this UserType instance
     */
    UserType setType(String type);
    
    enum Identifier implements ColumnIdentifier<UserType> {
        
        ID   ("id"),
        TYPE ("type");
        
        private final String columnId;
        private final TableIdentifier<UserType> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "JobApplicationDatabase";
        }
        
        @Override
        public String getSchemaId() {
            return "dbo";
        }
        
        @Override
        public String getTableId() {
            return "UserType";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<UserType> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}
package com.company.dbo.jobapplicationdatabase.dbo.userapplicationlog.generated;

import com.company.dbo.jobapplicationdatabase.dbo.jobpost.JobPost;
import com.company.dbo.jobapplicationdatabase.dbo.useraccount.UserAccount;
import com.company.dbo.jobapplicationdatabase.dbo.userapplicationlog.UserApplicationLog;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.dbo.jobapplicationdatabase.dbo.userapplicationlog.UserApplicationLog}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserApplicationLogImpl implements UserApplicationLog {
    
    private int userAccountId;
    private int jobPostId;
    
    protected GeneratedUserApplicationLogImpl() {}
    
    @Override
    public int getUserAccountId() {
        return userAccountId;
    }
    
    @Override
    public int getJobPostId() {
        return jobPostId;
    }
    
    @Override
    public UserApplicationLog setUserAccountId(int userAccountId) {
        this.userAccountId = userAccountId;
        return this;
    }
    
    @Override
    public UserApplicationLog setJobPostId(int jobPostId) {
        this.jobPostId = jobPostId;
        return this;
    }
    
    @Override
    public UserAccount findUserAccountId(Manager<UserAccount> foreignManager) {
        return foreignManager.stream().filter(UserAccount.ID.equal(getUserAccountId())).findAny().orElse(null);
    }
    
    @Override
    public JobPost findJobPostId(Manager<JobPost> foreignManager) {
        return foreignManager.stream().filter(JobPost.ID.equal(getJobPostId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("userAccountId = " + Objects.toString(getUserAccountId()));
        sj.add("jobPostId = "     + Objects.toString(getJobPostId()));
        return "UserApplicationLogImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof UserApplicationLog)) { return false; }
        final UserApplicationLog thatUserApplicationLog = (UserApplicationLog)that;
        if (this.getUserAccountId() != thatUserApplicationLog.getUserAccountId()) { return false; }
        if (this.getJobPostId() != thatUserApplicationLog.getJobPostId()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUserAccountId());
        hash = 31 * hash + Integer.hashCode(getJobPostId());
        return hash;
    }
}